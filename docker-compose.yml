version: '3.7'

volumes:
  kong_data: 
    name: kong_data

networks:
  kong-net:
    name: kong-net
    external: false

services:
  kong-migrations:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    container_name: kong-migrations
    command: kong migrations bootstrap
    depends_on:
      - db
    env_file:
      - ./kong-migration.env
    networks:
      - kong-net
    restart: always
    deploy:
      restart_policy:
        condition: on-failure

  kong-migrations-up:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    container_name: kong-migrations-up
    command: kong migrations up && kong migrations finish
    depends_on:
      - db
    env_file:
      - ./kong-migration.env
    networks:
      - kong-net
    restart: always
    deploy:
      restart_policy:
        condition: on-failure

  kong:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    depends_on:
      - db
    env_file:
      - ./kong-engine.env
    container_name: kong-engine
    networks:
      - kong-net
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "8443:8443/tcp"
      - "8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
    
  db:
    image: postgres:9.5
    env_file:
      - ./kong-db.env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: always
    container_name: db-kong
    ports:
      - "5433:5432"
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data

  konga:
    ports:
        - '1337:1337'
    depends_on:
      - kong
    networks:
      - kong-net
    env_file:
      - ./kong-db.env
    container_name: kong-admin
    image: pantsel/konga
